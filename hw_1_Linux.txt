HW_1. The first part
Linux terminal (GitBash) commands

1)	Посмотреть где я 

 pwd

2)	Создать папку 

mkdir [folder_name]

3)	Зайти в папку 

 cd [folder_name]

4)	Создать 3 папки 

 mkdir [folder_name][folder_name][folder_name]

5)	Зайти в любую папку 

 cd [folder_name]

6)	Создать 5 файлов (3 txt, 2 json) 

 touch [file_name.txt][file_name.txt][file_name.txt][file_name.json][file_name.json]

7)	Создать 3 папки 

 mkdir -p [folder_name][folder_name][folder_name]

8)	Вывести список содержимого папки 

  ls -la или ls -l или ls -a или ls

9)	+ Открыть любой txt файл 

 vim или cat [file_name]

10)	+ написать туда что-нибудь, любой текст. 

 "i" для insert и пишем

11)	+ сохранить и выйти. 

 Enter, Esc, :wq

12)	Выйти из папки на уровень выше

 cd ..

13)	переместить любые 2 файла, которые вы создали, в любую другую папку. 

 mv [file_name] [file_name] [folder_name]

14)	скопировать любые 2 файла, которые вы создали, в любую другую папку. 

 cp [file_name] [folder_name]

15)	Найти файл по имени 

find -name [file_name]

16)	просмотреть содержимое в реальном времени (команда grep) изучите как она работает.                         

tail -f [file_name] | grep [search_term] 

с помощью первой функции мы отслеживаем обновления файла с конца (приход новых данных). 
Функция grep помогает установить фильтр на отслеживаемые файлы. (чтобы не искать в бесконечном потоке определённое слово, его можно написать через grep, тогда будут отслеживаться обновления, включающие только этот критерий)

17)	вывести несколько первых строк из текстового файла 

head -n(amount) [file_name]

18)	вывести несколько последних строк из текстового файла 

tail -n(amount) [file_name] 

19)	просмотреть содержимое длинного файла (команда less) изучите как она работает. 

по сути это vim, но без функции редактирования, только для просмотра ///  less [file_name]

20)	вывести дату и время 

 date

Задание *

1) Отправить http запрос на сервер http://162.55.220.72:5005/terminal-hw-request

curl http://162.55.220.72:5005/terminal-hw-request

2) Написать скрипт который выполнит автоматически пункты 3, 4, 5, 6, 7, 8, 13

Создаём файл .txt
Открываем и пишем в нём след:

#!bin/bash , chmod +x ./[script_file_name], по желанию пишем сообщения echo “[msg]”, команды из пунктов выше (3-13)

Сохраяем как скрипт

Запускаем в консоли и пишем ./[script_file_name]